@using OE.Module.LHB.Services
@using System.Security.Claims

@namespace OE.Provider
@inherits ModuleBase
@inject AddressService AddressService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Index> Localizer
@inject AuthenticationStateProvider GetAuthenticationStateAsync

<Address Addr="@addr"></Address>
<MudButton Color="Color.Primary" OnClick="@(()=> AddAddr())">@Localizer["Save"]</MudButton>
<MudButton Color="Color.Secondary" OnClick="@(()=> Back())">@Localizer["Cancel"]</MudButton>


@code {
    MudForm form;
    // public override SecurityAccessLevel SecurityAccessLevel => SecurityAccessLevel.Edit;

    public override string Actions => "AddAddress";
    public override bool UseAdminContainer => true;  //popup
    public override string Title => "Manage Address";
    private int _id;
    private M.Address addr = new();

    bool success;
    string[] errors = { };
    ClaimsPrincipal user;

    protected override async Task OnInitializedAsync()
    {
        _id = int.Parse(PageState.QueryString["id"]);
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        user = authstate.User;
    }

    private void Back()
    {
        var url = EditUrl("Detail", $"id={_id}");
        NavigationManager.NavigateTo(url);
    }

    private async Task AddAddr()
    {
        //Do we need to manually do it, or can EF Magically figure this out?
        //If not, let's extract this out somehow (IAuditable interface for the Model?)
    
        //See https://stackoverflow.com/a/66867028

        var userName = user.Identity.Name;
        addr.CreatedBy = userName;
        addr.ModifiedBy = userName;
        addr.CreatedOn=DateTime.Now;
        addr.ModifiedOn=DateTime.Now;
        
        await AddressService.AddAddressAsync(addr);


        var url = EditUrl("Detail", $"id={_id}");
        NavigationManager.NavigateTo(url);
    }
}
