@inherits ModuleControlBase
@inject IStringLocalizer<OE.Provider.Edit> Localizer
@inject NavigationManager NavigationManager
@namespace OE.Module.LHB.Client.Controls

@if (Phone != null)
{
    <MudCard>
        <MudCardContent>
            <MudTextField Label="@Localizer["AreaCode"]" @bind-Value="Phone.AreaCode" For="@(() => Phone.AreaCode)" />
            <MudTextField Label="@Localizer["Number"]" @bind-Value="Phone.Number" For="@(() => Phone.Number)" />
            <MudTextField Label="@Localizer["Extension"]" @bind-Value="Phone.Extension" For="@(() => Phone.Extension)" />
            <MudTextField Label="@Localizer["Description"]" @bind-Value="Phone.Description" For="@(() => Phone.Description)" />
        </MudCardContent>
        <MudCardActions>

            @if (OnDelete.HasDelegate)
            {
                <MudButton Color="Color.Warning" OnClick="@(() => DeletePhone(Phone))">@Localizer["Delete"]</MudButton>
            }
        </MudCardActions>
    </MudCard>
}
@code {
    [Parameter] public M.PhoneNumber Phone { get; set; }
    [Parameter] public EventCallback<M.PhoneNumber> OnDelete { get; set; }

    private async Task DeletePhone(M.PhoneNumber phoneNumber)
    {
        await OnDelete.InvokeAsync(phoneNumber);
        var url = EditUrl("Detail", $"id={phoneNumber.ProviderId}");
        NavigationManager.NavigateTo(url);
    }

}
