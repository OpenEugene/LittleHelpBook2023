@using OE.LHB.Services
@using OE.LHB.Models


@inherits ModuleBase
@inject ResourceService ResourceService
@inject NavigationManager NavigationManager

@if (_resources == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ActionLink Action="Add" Security="SecurityAccessLevel.Edit" Text="Add Resourse" ResourceKey="Add" />
    <br />
    <br />
    @if (@_resources.Count != 0)
    {
        <Pager Items="@_resources">
            <Header>
                <th style="width: 1px;">&nbsp;</th>
                <th style="width: 1px;">&nbsp;</th>
                <th>Name</th>
            </Header>
            <Row>
                <td><ActionLink Action="Edit" Parameters="@($"id=" + context.Id)" ResourceKey="Edit"  /></td>
                <td><ActionDialog Header="Delete Resource" Message="Are You Sure You Wish To Delete This Resource?" Action="Delete" Security="SecurityAccessLevel.Edit" Class="btn btn-danger" OnClick="@(async () => await Delete(context))" ResourceKey="Delete"  /></td>
                <td>@context.Name</td>
            </Row>
        </Pager>
    }
    else
    {
        <p>No Resources</p>
    }
}

@code {
   

    List<Models.Resource> _resources;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _resources = await ResourceService.GetResourcesAsync();
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Loading Resource {Error}", ex.Message);
            AddModuleMessage("Load Error", MessageType.Error);
        }
    }

    private async Task Delete(Models.Resource resource)
    {
        try
        {
            await ResourceService.DeleteResourceAsync(resource.Id);
            await logger.LogInformation("Resource Deleted {resource}", resource);
            _resources = await ResourceService.GetResourcesAsync();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Deleting Resource {resource} {Error}", resource, ex.Message);
            AddModuleMessage("Delete Error", MessageType.Error);
        }
    }
}